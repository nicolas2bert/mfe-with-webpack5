{"version":3,"sources":["webpack://app-01/./src/Navbar.jsx","webpack://app-01/./src/Shell.jsx","webpack://app-01/./src/bootstrap.jsx","webpack://app-01/./src/reducers/init.js"],"names":["Navbar","React","render","console","log","props","version","e","init","mapStateToProps","state","shell","info","mapDispatchToProps","dispatch","type","connect","Root","lazy","Shell","store","shellReducer","combineReducers","rootReducer","createReducer","createStore","asyncReducers","addReducer","key","reducer","replaceReducer","ReactDOM","document","getElementById","action"],"mappings":"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","file":"src_bootstrap_jsx.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nclass Navbar extends React.Component{\n    // console.log('this.props.shellVersion!!!', this.props.shellVersion);\n    render() {\n        console.log('this.props!!!', this.props);\n        return <div>\n            <div> version: {this.props.version} </div>\n            <div> <button onClick={e => this.props.init()}> New Info </button> </div>\n        </div>;\n    }\n}\n\nfunction mapStateToProps(state) {\n    console.log('state!!!', state);\n    return {\n      version: state.shell.init.info.version,\n    };\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        init: () => dispatch({\n            type: 'INIT',\n            info: { version: 1 },\n        })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import React, { lazy, Suspense } from 'react';\nimport { Provider } from 'react-redux'\nimport Navbar from './Navbar';\n// import Root from 'app1/Root';\nconst Root = lazy(() => import('app1/Root'));\n\nclass Shell extends React.Component{\n    render() {\n        return <Provider store={this.props.store}>\n            <div>\n                <Navbar/>\n                <Suspense fallback={'fallback'}>\n                    <Root store={this.props.store}/>\n                </Suspense>\n            </div>\n        </Provider>;\n    }\n}\n\n\n\n\n\nexport default Shell;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Shell from './Shell';\nimport { createStore, combineReducers } from 'redux';\nimport init from './reducers/init';\n\nconst shellReducer = combineReducers({\n  init,\n});\n\nconst rootReducer = createReducer({});\n\nconst store = createStore(rootReducer);\n\nstore.asyncReducers = {};\n\n\nstore.addReducer = (key, reducer) => {\n    store.asyncReducers[key] = reducer;\n    console.log('store1!!!', store);\n    store.replaceReducer(createReducer(store.asyncReducers));\n    console.log('store2!!!', store);\n}\n\nReactDOM.render(<Shell store={store}/>,\n    document.getElementById('app'));\n\nfunction createReducer(asyncReducers) {\n    return combineReducers({\n        shell: shellReducer,\n        ...asyncReducers,\n    })\n}\n","\nfunction init(state = { info: { version: '0' }}, action) {\n  switch (action.type) {\n    case 'INIT':\n      return {\n        ...state,\n        info: action.info\n      }\n    default:\n      return state\n  }\n}\n\nexport default init;\n"],"sourceRoot":""}